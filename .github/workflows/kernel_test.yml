name: Kernel Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: asterinas/asterinas:0.4.2
    steps:
      - run: echo "Running in asterinas/asterinas:0.4.2"

      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          # This paths are from https://github.com/actions/cache/blob/main/examples.md#rust---cargo
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db
            target/
          key: ${{ runner.os }}-lint-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check
        id: check
        # Ensure OSDK is updated
        run: |
          make install_osdk
          make check

  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: asterinas/asterinas:0.4.2
    steps:
      - run: echo "Running in asterinas/asterinas:0.4.2"

      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          # Thess paths are from the rust example of the action:
          # https://github.com/actions/cache/blob/main/examples.md#rust---cargo
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db
            target/
          key: ${{ runner.os }}-unit-test-${{ hashFiles('**/Cargo.lock') }}

      # Ensure OSDK is updated
      - name: Install OSDK
        run: make install_osdk

      - name: Usermode Unit test
        id: usermode_unit_test
        run: make test

      - name: Ktest Unit Test
        id: ktest_unit_test
        run: make ktest

      # TODO: add component check.

  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container: asterinas/asterinas:0.4.2
    steps:
      - run: echo "Running in asterinas/asterinas:0.4.2"

      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          # This paths are from https://github.com/actions/cache/blob/main/examples.md#rust---cargo
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db
            target/
            regression/build/
          key: ${{ runner.os }}-integration-test-${{ hashFiles('**/Cargo.lock') }}
      
      # Ensure OSDK is updated
      - name: Install OSDK
        run: make install_osdk

      - name: Boot Test (Multiboot)
        id: boot_test_mb
        run: make run AUTO_TEST=boot ENABLE_KVM=0 BOOT_PROTOCOL=multiboot RELEASE=1

      - name: Boot Test (Multiboot2)
        id: boot_test_mb2
        run: make run AUTO_TEST=boot ENABLE_KVM=0 BOOT_PROTOCOL=multiboot2 RELEASE=1

      - name: Boot Test (MicroVM)
        id: boot_test_microvm
        run: make run AUTO_TEST=boot ENABLE_KVM=0 SCHEME=microvm RELEASE=1

      - name: Boot Test (Linux Legacy 32-bit Boot Protocol)
        id: boot_test_linux_legacy32
        run: make run AUTO_TEST=boot ENABLE_KVM=0 BOOT_PROTOCOL=linux-legacy32 RELEASE=1

      - name: Boot Test (Linux EFI Handover Boot Protocol)
        id: boot_test_linux_efi_handover64
        run: make run AUTO_TEST=boot ENABLE_KVM=0 BOOT_PROTOCOL=linux-efi-handover64 RELEASE=1

      - name: Syscall Test (Linux EFI Handover Boot Protocol)
        id: syscall_test
        run: make run AUTO_TEST=syscall ENABLE_KVM=0 BOOT_PROTOCOL=linux-efi-handover64 RELEASE=1

      - name: Syscall Test at Ext2 (MicroVM)
        id: syscall_test_at_ext2
        run: make run AUTO_TEST=syscall SYSCALL_TEST_DIR=/ext2 ENABLE_KVM=0 SCHEME=microvm RELEASE=1

      - name: Syscall Test at Exfat
        id: syscall_test_at_exfat_linux
        run: make run AUTO_TEST=syscall SYSCALL_TEST_DIR=/exfat EXTRA_BLOCKLISTS_DIRS=blocklists.exfat ENABLE_KVM=0 BOOT_PROTOCOL=linux-efi-handover64 RELEASE=1
        
      - name: Regression Test (Linux EFI Handover Boot Protocol)
        id: regression_test_linux
        run: make run AUTO_TEST=regression ENABLE_KVM=0 BOOT_PROTOCOL=linux-efi-handover64 RELEASE=1
